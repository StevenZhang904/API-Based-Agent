{
    "post /api/v4/groups/{id}/wikis/attachments": "Upload an attachment to the wiki repository",
    "delete /api/v4/groups/{id}/wikis/{slug}": "Delete a wiki page",
    "put /api/v4/groups/{id}/wikis/{slug}": "Update a wiki page",
    "get /api/v4/groups/{id}/wikis/{slug}": "Get a wiki page",
    "post /api/v4/groups/{id}/wikis": "Create a wiki page",
    "get /api/v4/groups/{id}/wikis": "Get a list of wiki pages",
    "post /api/v4/groups/{id}/access_tokens/{token_id}/rotate": "Rotate a resource access token",
    "post /api/v4/groups/{id}/access_tokens": "Create a resource access token",
    "get /api/v4/groups/{id}/access_tokens": "Get list of all access tokens for the specified resource",
    "delete /api/v4/groups/{id}/access_tokens/{token_id}": "Revoke a resource access token",
    "get /api/v4/groups/{id}/access_tokens/{token_id}": "Get an access token for the specified resource by ID",
    "get /api/v4/groups/{id}/releases": "List group releases",
    "get /api/v4/groups/{id}/merge_requests": "List group merge requests",
    "delete /api/v4/groups/{id}/billable_members/{user_id}": "Removes a billable member from a group or project.",
    "get /api/v4/groups/{id}/billable_members/{user_id}/memberships": "Get the memberships of a billable user of a root group.",
    "put /api/v4/groups/{id}/members/{user_id}/state": "Changes the state of the memberships of a user in the group",
    "get /api/v4/groups/{id}/billable_members": "Gets a list of billable users of root group.",
    "get /api/v4/groups/{id}/pending_members": "Lists all pending members for a group including invited users",
    "post /api/v4/groups/{id}/members/approve_all": "Approves all pending members",
    "put /api/v4/groups/{id}/members/{member_id}/approve": "Approves a pending member",
    "delete /api/v4/groups/{id}/members/{user_id}/override": "Remove an LDAP group member access level override.",
    "post /api/v4/groups/{id}/members/{user_id}/override": "Overrides the access level of an LDAP group member.",
    "delete /api/v4/groups/{id}/members/{user_id}": "Removes a user from a group or project.",
    "put /api/v4/groups/{id}/members/{user_id}": "Updates a member of a group or project.",
    "get /api/v4/groups/{id}/members/{user_id}": "Gets a member of a group or project.",
    "post /api/v4/groups/{id}/members": "Adds a member to a group or project.",
    "get /api/v4/groups/{id}/members": "Gets a list of group or project members viewable by the authenticated user.",
    "get /api/v4/groups/{id}/members/all/{user_id}": "Gets a member of a group or project, including those who gained membership through ancestor group",
    "get /api/v4/groups/{id}/members/all": "Gets a list of group or project members viewable by the authenticated user, including those who gained membership through ancestor group.",
    "get /api/v4/groups/{id}/-/packages/maven/*path/{file_name}": "Download the maven package file at a group level",
    "delete /api/v4/groups/{id}/invitations/{email}": "Removes an invitation from a group or project.",
    "put /api/v4/groups/{id}/invitations/{email}": "Updates a group or project invitation.",
    "get /api/v4/groups/{id}/invitations": "Get a list of group or project invitations viewable by the authenticated user",
    "post /api/v4/groups/{id}/invitations": "Invite non-members by email address to a group or project.",
    "delete /api/v4/groups/{id}/variables/{key}": "Delete an existing variable from a group",
    "put /api/v4/groups/{id}/variables/{key}": "Update an existing variable from a group",
    "get /api/v4/groups/{id}/variables/{key}": "Get the details of a group\u2019s specific variable",
    "post /api/v4/groups/{id}/variables": "Create a new variable in a group",
    "get /api/v4/groups/{id}/variables": "Get a list of group-level variables",
    "get /api/v4/groups/{id}/packages": "List packages within a group",
    "post /api/v4/groups/import": "Create a new group import",
    "post /api/v4/groups/import/authorize": "Workhorse authorize the group import upload",
    "get /api/v4/groups/{id}/export_relations/status": "Relations export status",
    "get /api/v4/groups/{id}/export_relations/download": "Download relations export",
    "post /api/v4/groups/{id}/export_relations": "Start relations export",
    "post /api/v4/groups/{id}/export": "Start export",
    "get /api/v4/groups/{id}/export/download": "Download export",
    "get /api/v4/groups/{id}/registry/repositories": "List registry repositories within a group",
    "delete /api/v4/groups/{id}/clusters/{cluster_id}": "Delete group cluster",
    "put /api/v4/groups/{id}/clusters/{cluster_id}": "Edit group cluster",
    "get /api/v4/groups/{id}/clusters/{cluster_id}": "Get a single group cluster",
    "post /api/v4/groups/{id}/clusters/user": "Add existing cluster to group",
    "get /api/v4/groups/{id}/clusters": "List group clusters",
    "get /api/v4/groups/{id}/avatar": "Download the group avatar",
    "delete /api/v4/groups/{id}/deploy_tokens/{token_id}": "Delete a group deploy token",
    "get /api/v4/groups/{id}/deploy_tokens/{token_id}": "Get a group deploy token",
    "post /api/v4/groups/{id}/deploy_tokens": "Create a group deploy token",
    "get /api/v4/groups/{id}/deploy_tokens": "List group deploy tokens",
    "delete /api/v4/groups/{id}/dependency_proxy/cache": "Purge the dependency proxy for a group",
    "post /api/v4/groups/{id}/runners/reset_registration_token": "Reset the runner registration token for a group",
    "get /api/v4/groups/{id}/runners": "List group's runners",
    "delete /api/v4/groups/{id}/ssh_certificates/{ssh_certificates_id}": "Removes an ssh certificate from a group.",
    "post /api/v4/groups/{id}/ssh_certificates": "Add a Groups::SshCertificate.",
    "get /api/v4/groups/{id}/ssh_certificates": "Get a list of Groups::SshCertificate for a Group.",
    "get /api/v4/groups/{id}/users": "Get a list of users for the group",
    "get /api/v4/groups/{id}/provisioned_users": "Get a list of users provisioned by the group",
    "post /api/v4/groups/{id}/restore": "Restore a group.",
    "post /api/v4/groups/{id}/ldap_sync": "Sync a group with LDAP.",
    "post /api/v4/groups/{id}/share": "Share a group with a group",
    "post /api/v4/groups/{id}/transfer": "Transfer a group to a new parent group or promote a subgroup to a root group",
    "get /api/v4/groups/{id}/transfer_locations": "Get the groups to where the current group can be transferred to",
    "post /api/v4/groups/{id}/projects/{project_id}": "Transfer a project to the group namespace. Available only for admin.",
    "get /api/v4/groups/{id}/descendant_groups": "Get a list of descendant groups of this group.",
    "get /api/v4/groups/{id}/subgroups": "Get a list of subgroups in this group.",
    "get /api/v4/groups/{id}/projects/shared": "Get a list of shared projects in this group",
    "get /api/v4/groups/{id}/projects": "Get a list of projects in this group.",
    "delete /api/v4/groups/{id}": "Remove a group.",
    "get /api/v4/groups/{id}": "Get a single group, with containing projects.",
    "put /api/v4/groups/{id}": "Update a group. Available only for users who can administrate groups.",
    "post /api/v4/groups": "Create a group. Available only for users who can create groups.",
    "get /api/v4/groups": "Get a groups list",
    "delete /api/v4/groups/{id}/custom_attributes/{key}": "Delete a custom attribute on a group",
    "put /api/v4/groups/{id}/custom_attributes/{key}": "Set a custom attribute on a group",
    "get /api/v4/groups/{id}/custom_attributes/{key}": "Get a custom attribute on a group",
    "get /api/v4/groups/{id}/custom_attributes": "Get all custom attributes on a group",
    "delete /api/v4/groups/{id}/badges/{badge_id}": "Removes a badge from the group.",
    "put /api/v4/groups/{id}/badges/{badge_id}": "Updates a badge of a group.",
    "get /api/v4/groups/{id}/badges/{badge_id}": "Gets a badge of a group.",
    "post /api/v4/groups/{id}/badges": "Adds a badge to a group.",
    "get /api/v4/groups/{id}/badges": "Gets a list of group badges viewable by the authenticated user.",
    "get /api/v4/groups/{id}/badges/render": "Preview a badge from a group.",
    "delete /api/v4/groups/{id}/access_requests/{user_id}": "Denies an access request for the given user.",
    "put /api/v4/groups/{id}/access_requests/{user_id}/approve": "Approves an access request for the given user.",
    "post /api/v4/groups/{id}/access_requests": "Requests access for the authenticated user to a group.",
    "get /api/v4/groups/{id}/access_requests": "Gets a list of access requests for a group.",
    "get /api/v4/groups/{id}/audit_events/{audit_event_id}": "Get a specific audit event in this group.",
    "get /api/v4/groups/{id}/audit_events": "Get a list of audit events in this group.",
    "get /api/v4/groups/{id}/-/packages/debian/dists/*distribution/InRelease": "The signed Release file",
    "get /api/v4/groups/{id}/-/packages/debian/dists/*distribution/Release": "The unsigned Release file",
    "get /api/v4/groups/{id}/-/packages/debian/dists/*distribution/Release.gpg": "The Release file signature",
    "get /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/debian-installer/binary-{architecture}/by-hash/SHA256/{file_sha256}": "The installer (udeb) binary files index by hash",
    "get /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/debian-installer/binary-{architecture}/Packages": "The installer (udeb) binary files index",
    "get /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/source/by-hash/SHA256/{file_sha256}": "The source files index by hash",
    "get /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/source/Sources": "The source files index",
    "get /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/binary-{architecture}/by-hash/SHA256/{file_sha256}": "The binary files index by hash",
    "get /api/v4/groups/{id}/-/packages/debian/dists/*distribution/{component}/binary-{architecture}/Packages": "The binary files index",
    "get /api/v4/groups/{id}/-/packages/debian/pool/{distribution}/{project_id}/{letter}/{package_name}/{package_version}/{file_name}": "Download Debian package",
    "delete /api/v4/groups/{id}/-/debian_distributions/{codename}": "Delete a Debian Distribution",
    "put /api/v4/groups/{id}/-/debian_distributions/{codename}": "Update a Debian Distribution",
    "get /api/v4/groups/{id}/-/debian_distributions/{codename}": "Get a Debian Distribution",
    "get /api/v4/groups/{id}/-/debian_distributions/{codename}/key.asc": "Get a Debian Distribution Key",
    "get /api/v4/groups/{id}/-/debian_distributions": "Get a list of Debian Distributions",
    "post /api/v4/groups/{id}/-/debian_distributions": "Create a Debian Distribution",
    "get /api/v4/groups/{id}/-/packages/npm/-/package/*package_name/dist-tags": "Get all tags for a given an NPM package",
    "delete /api/v4/groups/{id}/-/packages/npm/-/package/*package_name/dist-tags/{tag}": "Deletes the given tag",
    "put /api/v4/groups/{id}/-/packages/npm/-/package/*package_name/dist-tags/{tag}": "Create or Update the given tag for the given NPM package and version",
    "post /api/v4/groups/{id}/-/packages/npm/-/npm/v1/security/audits/quick": "NPM registry quick audit endpoint",
    "post /api/v4/groups/{id}/-/packages/npm/-/npm/v1/security/advisories/bulk": "NPM registry bulk advisory endpoint",
    "get /api/v4/groups/{id}/-/packages/npm/*package_name": "NPM registry metadata endpoint",
    "get /api/v4/groups/{id}/-/packages/nuget/index": "The NuGet V3 Feed Service Index",
    "get /api/v4/groups/{id}/-/packages/nuget/symbolfiles/*file_name/*signature/*same_file_name": "The NuGet Symbol File Download Endpoint",
    "get /api/v4/groups/{id}/-/packages/nuget/v2/$metadata": "The NuGet V2 Feed Package $metadata endpoint",
    "get /api/v4/groups/{id}/-/packages/nuget/v2": "The NuGet V2 Feed Service Index",
    "get /api/v4/groups/{id}/-/packages/nuget/metadata/*package_name/*package_version": "The NuGet Metadata Service - Package name and version level",
    "get /api/v4/groups/{id}/-/packages/nuget/metadata/*package_name/index": "The NuGet Metadata Service - Package name level",
    "get /api/v4/groups/{id}/-/packages/nuget/query": "The NuGet Search Service",
    "get /api/v4/groups/{id}/-/packages/pypi/simple/*package_name": "The PyPi Simple Group Package Endpoint",
    "get /api/v4/groups/{id}/-/packages/pypi/simple": "The PyPi Simple Group Index Endpoint",
    "get /api/v4/groups/{id}/-/packages/pypi/files/{sha256}/*file_identifier": "Download a package file from a group",
    "post /api/v4/projects/{id}/wikis/attachments": "Upload an attachment to the wiki repository",
    "delete /api/v4/projects/{id}/wikis/{slug}": "Delete a wiki page",
    "put /api/v4/projects/{id}/wikis/{slug}": "Update a wiki page",
    "get /api/v4/projects/{id}/wikis/{slug}": "Get a wiki page",
    "post /api/v4/projects/{id}/wikis": "Create a wiki page",
    "get /api/v4/projects/{id}/wikis": "Get a list of wiki pages",
    "get /api/v4/projects/{id}/repository/tags/{tag_name}/signature": "Get a tag's signature",
    "delete /api/v4/projects/{id}/repository/tags/{tag_name}": "Delete a repository tag",
    "get /api/v4/projects/{id}/repository/tags/{tag_name}": "Get a single repository tag",
    "post /api/v4/projects/{id}/repository/tags": "Create a new repository tag",
    "get /api/v4/projects/{id}/repository/tags": "Get a project repository tags",
    "put /api/v4/projects/{id}/repository/submodules/{submodule}": "Update existing submodule reference in repository",
    "get /api/v4/projects/{id}/merge_requests/{eventable_id}/resource_milestone_events/{event_id}": "Get single Merge request milestone event",
    "get /api/v4/projects/{id}/merge_requests/{eventable_id}/resource_milestone_events": "List project Merge request milestone events",
    "get /api/v4/projects/{id}/issues/{eventable_id}/resource_milestone_events/{event_id}": "Get single Issue milestone event",
    "get /api/v4/projects/{id}/issues/{eventable_id}/resource_milestone_events": "List project Issue milestone events",
    "post /api/v4/projects/{id}/access_tokens/{token_id}/rotate": "Rotate a resource access token",
    "post /api/v4/projects/{id}/access_tokens": "Create a resource access token",
    "get /api/v4/projects/{id}/access_tokens": "Get list of all access tokens for the specified resource",
    "delete /api/v4/projects/{id}/access_tokens/{token_id}": "Revoke a resource access token",
    "get /api/v4/projects/{id}/access_tokens/{token_id}": "Get an access token for the specified resource by ID",
    "post /api/v4/projects/{id}/repository/changelog": "Generates a changelog section for a release and commits it in a changelog file",
    "get /api/v4/projects/{id}/repository/changelog": "Generates a changelog section for a release and returns it",
    "get /api/v4/projects/{id}/repository/merge_base": "Get the common ancestor between commits",
    "get /api/v4/projects/{id}/repository/contributors": "Get repository contributors",
    "get /api/v4/projects/{id}/repository/compare": "Compare two branches, tags, or commits",
    "get /api/v4/projects/{id}/repository/archive": "Get an archive of the repository",
    "get /api/v4/projects/{id}/repository/blobs/{sha}": "Get a blob from the repository",
    "get /api/v4/projects/{id}/repository/blobs/{sha}/raw": "Get raw blob contents from the repository",
    "get /api/v4/projects/{id}/repository/tree": "Get a project repository tree",
    "delete /api/v4/projects/{id}/remote_mirrors/{mirror_id}": "Delete a single remote mirror",
    "put /api/v4/projects/{id}/remote_mirrors/{mirror_id}": "Update the attributes of a single remote mirror",
    "get /api/v4/projects/{id}/remote_mirrors/{mirror_id}": "Get a single remote mirror",
    "post /api/v4/projects/{id}/remote_mirrors": "Create remote mirror for a project",
    "get /api/v4/projects/{id}/remote_mirrors": "List the project's remote mirrors",
    "post /api/v4/projects/{id}/releases/{tag_name}/evidence": "Collect release evidence",
    "delete /api/v4/projects/{id}/releases/{tag_name}": "Delete a release",
    "put /api/v4/projects/{id}/releases/{tag_name}": "Update a release",
    "get /api/v4/projects/{id}/releases/{tag_name}": "Get a release by a tag name",
    "post /api/v4/projects/{id}/releases": "Create a release",
    "get /api/v4/projects/{id}/releases": "List Releases",
    "get /api/v4/projects/{id}/releases/permalink/latest(/)(*suffix_path)": "Get the latest project release",
    "get /api/v4/projects/{id}/releases/{tag_name}/downloads/*direct_asset_path": "Download a project release asset file",
    "delete /api/v4/projects/{id}/protected_tags/{name}": "Unprotect a single tag",
    "get /api/v4/projects/{id}/protected_tags/{name}": "Get a single protected tag",
    "post /api/v4/projects/{id}/protected_tags": "Protect a single tag or wildcard",
    "get /api/v4/projects/{id}/protected_tags": "Get a project's protected tags",
    "delete /api/v4/projects/{id}/protected_branches/{name}": "Unprotect a single branch",
    "patch /api/v4/projects/{id}/protected_branches/{name}": "Update a protected branch",
    "get /api/v4/projects/{id}/protected_branches/{name}": "Get a single protected branch",
    "post /api/v4/projects/{id}/protected_branches": "Protect a single branch",
    "get /api/v4/projects/{id}/protected_branches": "Get a project's protected branches",
    "post /api/v4/projects/{id}/restore": "Restore a project",
    "get /api/v4/projects/{id}/storage": "Show the storage information",
    "get /api/v4/projects/{id}/transfer_locations": "Get the namespaces to where the project can be transferred",
    "put /api/v4/projects/{id}/transfer": "Transfer a project to a new namespace",
    "post /api/v4/projects/{id}/repository_size": "Start a task to recalculate repository size for a project",
    "post /api/v4/projects/{id}/housekeeping": "Start the housekeeping task for a project",
    "get /api/v4/projects/{id}/groups": "Get ancestor and shared groups for a project",
    "get /api/v4/projects/{id}/users": "Get the users list of a project",
    "post /api/v4/projects/{id}/uploads": "Upload a file",
    "post /api/v4/projects/{id}/uploads/authorize": "Workhorse authorize the file upload",
    "post /api/v4/projects/{id}/import_project_members/{project_id}": "Import members from another project",
    "delete /api/v4/projects/{id}/share/{group_id}": "Remove a group share",
    "post /api/v4/projects/{id}/share": "Share the project with a group",
    "delete /api/v4/projects/{id}/fork": "Remove a forked_from relationship",
    "post /api/v4/projects/{id}/fork": "Fork new project for the current user or provided namespace.",
    "post /api/v4/projects/{id}/fork/{forked_from_id}": "Mark this project as forked from another",
    "delete /api/v4/projects/{id}": "Delete a project",
    "put /api/v4/projects/{id}": "Update an existing project",
    "get /api/v4/projects/{id}": "Get a single project",
    "get /api/v4/projects/{id}/languages": "Get languages in project repository",
    "get /api/v4/projects/{id}/starrers": "Get the users who starred a project",
    "post /api/v4/projects/{id}/unstar": "Unstar a project",
    "post /api/v4/projects/{id}/star": "Star a project",
    "post /api/v4/projects/{id}/unarchive": "Unarchive a project",
    "post /api/v4/projects/{id}/archive": "Archive a project",
    "get /api/v4/projects/{id}/pages_access": "Check pages access of this project",
    "get /api/v4/projects/{id}/forks": "List forks of this project",
    "get /api/v4/projects/{id}/share_locations": "Returns group that can be shared with the given project",
    "post /api/v4/projects/user/{user_id}": "Create new project for a specified user. Only available to admin users.",
    "post /api/v4/projects": "Create new project",
    "get /api/v4/projects": "Get a list of visible projects for authenticated user",
    "delete /api/v4/projects/{id}/custom_attributes/{key}": "Delete a custom attribute on a project",
    "put /api/v4/projects/{id}/custom_attributes/{key}": "Set a custom attribute on a project",
    "get /api/v4/projects/{id}/custom_attributes/{key}": "Get a custom attribute on a project",
    "get /api/v4/projects/{id}/custom_attributes": "Get all custom attributes on a project",
    "get /api/v4/projects/{id}/templates/{type}/{name}": "Download a template available to this project",
    "get /api/v4/projects/{id}/templates/{type}": "Get a list of templates available to this project",
    "get /api/v4/projects/{id}/statistics": "Get the list of project fetch statistics for the last 30 days",
    "get /api/v4/projects/{id}/snapshot": "Download a (possibly inconsistent) snapshot of a repository",
    "get /api/v4/projects/{id}/snippets/{snippet_id}/user_agent_detail": "Get the user agent details for a project snippet",
    "get /api/v4/projects/{id}/snippets/{snippet_id}/files/{ref}/{file_path}/raw": "Get raw project snippet file contents from the repository",
    "get /api/v4/projects/{id}/snippets/{snippet_id}/raw": "Get a raw project snippet",
    "delete /api/v4/projects/{id}/snippets/{snippet_id}": "Delete a project snippet",
    "put /api/v4/projects/{id}/snippets/{snippet_id}": "Update an existing project snippet",
    "get /api/v4/projects/{id}/snippets/{snippet_id}": "Get a single project snippet",
    "post /api/v4/projects/{id}/snippets": "Create a new project snippet",
    "get /api/v4/projects/{id}/snippets": "Get all project snippets",
    "post /api/v4/projects/{id}/repository_storage_moves": "Schedule a project repository storage move",
    "get /api/v4/projects/{id}/repository_storage_moves": "Get a list of all project repository storage moves",
    "get /api/v4/projects/{id}/repository_storage_moves/{repository_storage_move_id}": "Get a project repository storage move",
    "delete /api/v4/projects/{id}/packages/{package_id}": "Delete a project package",
    "get /api/v4/projects/{id}/packages/{package_id}": "Get a single project package",
    "get /api/v4/projects/{id}/packages/{package_id}/pipelines": "Get the pipelines for a single project package",
    "get /api/v4/projects/{id}/packages": "Get a list of project packages",
    "delete /api/v4/projects/{id}/job_token_scope/allowlist/{target_project_id}": "Delete project from allowlist.",
    "delete /api/v4/projects/{id}/job_token_scope/groups_allowlist/{target_group_id}": "Delete target group from allowlist.",
    "post /api/v4/projects/{id}/job_token_scope/groups_allowlist": "Add target group to allowlist.",
    "get /api/v4/projects/{id}/job_token_scope/groups_allowlist": "Fetch project groups allowlist for CI_JOB_TOKEN access settings.",
    "post /api/v4/projects/{id}/job_token_scope/allowlist": "Add target project to allowlist.",
    "get /api/v4/projects/{id}/job_token_scope/allowlist": "Fetch project inbound allowlist for CI_JOB_TOKEN access settings.",
    "patch /api/v4/projects/{id}/job_token_scope": "Patch CI_JOB_TOKEN access settings.",
    "get /api/v4/projects/{id}/job_token_scope": "Fetch CI_JOB_TOKEN access settings.",
    "post /api/v4/projects/remote-import-s3": "Create a new project import using a file from AWS S3",
    "post /api/v4/projects/remote-import": "Create a new project import using a remote object storage path",
    "get /api/v4/projects/{id}/import": "Get a project import status",
    "post /api/v4/projects/import": "Create a new project import",
    "post /api/v4/projects/import/authorize": "Workhorse authorize the project import upload",
    "delete /api/v4/projects/{id}/hooks/{hook_id}": "Delete a project hook",
    "put /api/v4/projects/{id}/hooks/{hook_id}": "Edit project hook",
    "get /api/v4/projects/{id}/hooks/{hook_id}": "Get project hook",
    "post /api/v4/projects/{id}/hooks": "Add project hook",
    "get /api/v4/projects/{id}/hooks": "List project hooks",
    "get /api/v4/projects/{id}/export_relations/status": "Relations export status",
    "get /api/v4/projects/{id}/export_relations/download": "Download relations export",
    "post /api/v4/projects/{id}/export_relations": "Start relations export",
    "post /api/v4/projects/{id}/export": "Start export",
    "get /api/v4/projects/{id}/export": "Get export status",
    "get /api/v4/projects/{id}/export/download": "Download export",
    "get /api/v4/projects/{id}/events": "List a project's visible events",
    "delete /api/v4/projects/{id}/registry/repositories/{repository_id}/tags/{tag_name}": "Delete repository tag",
    "get /api/v4/projects/{id}/registry/repositories/{repository_id}/tags/{tag_name}": "Get details about a repository tag",
    "delete /api/v4/projects/{id}/registry/repositories/{repository_id}/tags": "Delete repository tags (in bulk)",
    "get /api/v4/projects/{id}/registry/repositories/{repository_id}/tags": "List tags of a repository",
    "delete /api/v4/projects/{id}/registry/repositories/{repository_id}": "Delete repository",
    "get /api/v4/projects/{id}/registry/repositories": "List container repositories within a project",
    "delete /api/v4/projects/{id}/clusters/{cluster_id}": "Delete project cluster",
    "put /api/v4/projects/{id}/clusters/{cluster_id}": "Edit project cluster",
    "get /api/v4/projects/{id}/clusters/{cluster_id}": "Get a single project cluster",
    "post /api/v4/projects/{id}/clusters/user": "Add existing cluster to project",
    "get /api/v4/projects/{id}/clusters": "List project clusters",
    "get /api/v4/projects/{id}/avatar": "Download a project avatar",
    "delete /api/v4/projects/{id}/pages/domains/{domain}": "Delete a pages domain",
    "put /api/v4/projects/{id}/pages/domains/{domain}": "Updates a pages domain",
    "get /api/v4/projects/{id}/pages/domains/{domain}": "Get a single pages domain",
    "post /api/v4/projects/{id}/pages/domains": "Create a new pages domain",
    "get /api/v4/projects/{id}/pages/domains": "Get all pages domains",
    "get /api/v4/projects/{id}/pages": "Get pages settings",
    "delete /api/v4/projects/{id}/pages": "Unpublish pages",
    "delete /api/v4/projects/{id}/packages/{package_id}/package_files/{package_file_id}": "Delete a package file",
    "get /api/v4/projects/{id}/packages/{package_id}/package_files": "List package files",
    "delete /api/v4/projects/{id}/metrics/user_starred_dashboards": "Remove a star from a dashboard",
    "post /api/v4/projects/{id}/metrics/user_starred_dashboards": "Add a star to a dashboard",
    "get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/versions/{version_id}": "Get a single merge request diff version",
    "get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/versions": "Get a list of merge request diff versions",
    "get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/closes_issues": "List issues that close on merge",
    "put /api/v4/projects/{id}/merge_requests/{merge_request_iid}/rebase": "Rebase a merge request",
    "post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/cancel_merge_when_pipeline_succeeds": "Cancel Merge When Pipeline Succeeds",
    "get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/merge_ref": "Returns the up to date merge-ref HEAD commit",
    "put /api/v4/projects/{id}/merge_requests/{merge_request_iid}/merge": "Merge a merge request",
    "put /api/v4/projects/{id}/merge_requests/{merge_request_iid}": "Update merge request",
    "get /api/v4/projects/{id}/merge_requests/{merge_request_iid}": "Get single merge request",
    "delete /api/v4/projects/{id}/merge_requests/{merge_request_iid}": "Delete a merge request",
    "post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/pipelines": "Create merge request pipeline",
    "get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/pipelines": "Get single merge request pipelines",
    "get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/diffs": "Get the merge request diffs",
    "get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/changes": "Get single merge request changes",
    "delete /api/v4/projects/{id}/merge_requests/{merge_request_iid}/context_commits": "Delete merge request context commits",
    "post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/context_commits": "Create merge request context commits",
    "get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/context_commits": "List merge request context commits",
    "get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/commits": "Get single merge request commits",
    "get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/reviewers": "Get single merge request reviewers",
    "get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/participants": "Get single merge request participants",
    "post /api/v4/projects/{id}/merge_requests": "Create merge request",
    "get /api/v4/projects/{id}/merge_requests": "List project merge requests",
    "get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/time_stats": "Get time tracking stats",
    "post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/reset_spent_time": "Reset spent time for a merge_request",
    "post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/add_spent_time": "Add spent time for a merge_request",
    "post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/reset_time_estimate": "Reset the time estimate for a project merge_request",
    "post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/time_estimate": "Set a time estimate for a merge_request",
    "post /api/v4/projects/{id}/create_ci_config": "Creates merge request for missing ci config in project",
    "delete /api/v4/projects/{id}/members/{user_id}": "Removes a user from a group or project.",
    "put /api/v4/projects/{id}/members/{user_id}": "Updates a member of a group or project.",
    "get /api/v4/projects/{id}/members/{user_id}": "Gets a member of a group or project.",
    "post /api/v4/projects/{id}/members": "Adds a member to a group or project.",
    "get /api/v4/projects/{id}/members": "Gets a list of group or project members viewable by the authenticated user.",
    "get /api/v4/projects/{id}/members/all/{user_id}": "Gets a member of a group or project, including those who gained membership through ancestor group",
    "get /api/v4/projects/{id}/members/all": "Gets a list of group or project members viewable by the authenticated user, including those who gained membership through ancestor group.",
    "put /api/v4/projects/{id}/packages/maven/*path/{file_name}": "Upload the maven package file",
    "get /api/v4/projects/{id}/packages/maven/*path/{file_name}": "Download the maven package file at a project level",
    "put /api/v4/projects/{id}/packages/maven/*path/{file_name}/authorize": "Workhorse authorize the maven package file upload",
    "post /api/v4/projects/{id}/ci/lint": "Validate a CI YAML configuration with a namespace",
    "get /api/v4/projects/{id}/ci/lint": "Validates a CI YAML configuration with a namespace",
    "delete /api/v4/projects/{id}/issues/{issue_iid}/links/{issue_link_id}": "Delete an issue link",
    "get /api/v4/projects/{id}/issues/{issue_iid}/links/{issue_link_id}": "Get an issue link",
    "post /api/v4/projects/{id}/issues/{issue_iid}/links": "Create an issue link",
    "get /api/v4/projects/{id}/issues/{issue_iid}/links": "List issue relations",
    "delete /api/v4/projects/{id}/invitations/{email}": "Removes an invitation from a group or project.",
    "put /api/v4/projects/{id}/invitations/{email}": "Updates a group or project invitation.",
    "get /api/v4/projects/{id}/invitations": "Get a list of group or project invitations viewable by the authenticated user",
    "post /api/v4/projects/{id}/invitations": "Invite non-members by email address to a group or project.",
    "post /api/v4/projects/{id}/integrations/slack_slash_commands/trigger": "Trigger a slash command for slack-slash-commands",
    "post /api/v4/projects/{id}/integrations/mattermost_slash_commands/trigger": "Trigger a slash command for mattermost-slash-commands",
    "get /api/v4/projects/{id}/integrations/{slug}": "Get an integration settings",
    "delete /api/v4/projects/{id}/integrations/{slug}": "Disable an integration",
    "put /api/v4/projects/{id}/integrations/mock-monitoring": "Create/Edit Mock Monitoring integration",
    "put /api/v4/projects/{id}/integrations/mock-ci": "Create/Edit Mock Ci integration",
    "put /api/v4/projects/{id}/integrations/google-cloud-platform-workload-identity-federation": "Create/Edit Google Cloud Platform Workload Identity Federation integration",
    "put /api/v4/projects/{id}/integrations/google-cloud-platform-artifact-registry": "Create/Edit Google Cloud Platform Artifact Registry integration",
    "put /api/v4/projects/{id}/integrations/git-guardian": "Create/Edit Git Guardian integration",
    "put /api/v4/projects/{id}/integrations/github": "Create/Edit Github integration",
    "put /api/v4/projects/{id}/integrations/squash-tm": "Create/Edit Squash Tm integration",
    "put /api/v4/projects/{id}/integrations/zentao": "Create/Edit Zentao integration",
    "put /api/v4/projects/{id}/integrations/webex-teams": "Create/Edit Webex Teams integration",
    "put /api/v4/projects/{id}/integrations/unify-circuit": "Create/Edit Unify Circuit integration",
    "put /api/v4/projects/{id}/integrations/telegram": "Create/Edit Telegram integration",
    "put /api/v4/projects/{id}/integrations/teamcity": "Create/Edit Teamcity integration",
    "put /api/v4/projects/{id}/integrations/mattermost": "Create/Edit Mattermost integration",
    "put /api/v4/projects/{id}/integrations/microsoft-teams": "Create/Edit Microsoft Teams integration",
    "put /api/v4/projects/{id}/integrations/slack": "Create/Edit Slack integration",
    "put /api/v4/projects/{id}/integrations/clickup": "Create/Edit Clickup integration",
    "put /api/v4/projects/{id}/integrations/youtrack": "Create/Edit Youtrack integration",
    "put /api/v4/projects/{id}/integrations/ewm": "Create/Edit Ewm integration",
    "put /api/v4/projects/{id}/integrations/redmine": "Create/Edit Redmine integration",
    "put /api/v4/projects/{id}/integrations/pushover": "Create/Edit Pushover integration",
    "put /api/v4/projects/{id}/integrations/pumble": "Create/Edit Pumble integration",
    "put /api/v4/projects/{id}/integrations/prometheus": "Create/Edit Prometheus integration",
    "put /api/v4/projects/{id}/integrations/pivotaltracker": "Create/Edit Pivotaltracker integration",
    "put /api/v4/projects/{id}/integrations/pipelines-email": "Create/Edit Pipelines Email integration",
    "put /api/v4/projects/{id}/integrations/packagist": "Create/Edit Packagist integration",
    "put /api/v4/projects/{id}/integrations/slack-slash-commands": "Create/Edit Slack Slash Commands integration",
    "put /api/v4/projects/{id}/integrations/mattermost-slash-commands": "Create/Edit Mattermost Slash Commands integration",
    "put /api/v4/projects/{id}/integrations/jira": "Create/Edit Jira integration",
    "put /api/v4/projects/{id}/integrations/jenkins": "Create/Edit Jenkins integration",
    "put /api/v4/projects/{id}/integrations/irker": "Create/Edit Irker integration",
    "put /api/v4/projects/{id}/integrations/harbor": "Create/Edit Harbor integration",
    "put /api/v4/projects/{id}/integrations/hangouts-chat": "Create/Edit Hangouts Chat integration",
    "put /api/v4/projects/{id}/integrations/google-play": "Create/Edit Google Play integration",
    "put /api/v4/projects/{id}/integrations/gitlab-slack-application": "Create/Edit Gitlab Slack Application integration",
    "put /api/v4/projects/{id}/integrations/external-wiki": "Create/Edit External Wiki integration",
    "put /api/v4/projects/{id}/integrations/emails-on-push": "Create/Edit Emails On Push integration",
    "put /api/v4/projects/{id}/integrations/drone-ci": "Create/Edit Drone Ci integration",
    "put /api/v4/projects/{id}/integrations/discord": "Create/Edit Discord integration",
    "put /api/v4/projects/{id}/integrations/diffblue-cover": "Create/Edit Diffblue Cover integration",
    "put /api/v4/projects/{id}/integrations/datadog": "Create/Edit Datadog integration",
    "put /api/v4/projects/{id}/integrations/custom-issue-tracker": "Create/Edit Custom Issue Tracker integration",
    "put /api/v4/projects/{id}/integrations/confluence": "Create/Edit Confluence integration",
    "put /api/v4/projects/{id}/integrations/campfire": "Create/Edit Campfire integration",
    "put /api/v4/projects/{id}/integrations/buildkite": "Create/Edit Buildkite integration",
    "put /api/v4/projects/{id}/integrations/bugzilla": "Create/Edit Bugzilla integration",
    "put /api/v4/projects/{id}/integrations/bamboo": "Create/Edit Bamboo integration",
    "put /api/v4/projects/{id}/integrations/assembla": "Create/Edit Assembla integration",
    "put /api/v4/projects/{id}/integrations/asana": "Create/Edit Asana integration",
    "put /api/v4/projects/{id}/integrations/apple-app-store": "Create/Edit Apple App Store integration",
    "get /api/v4/projects/{id}/integrations": "List all active integrations",
    "post /api/v4/projects/{id}/services/slack_slash_commands/trigger": "Trigger a slash command for slack-slash-commands",
    "post /api/v4/projects/{id}/services/mattermost_slash_commands/trigger": "Trigger a slash command for mattermost-slash-commands",
    "get /api/v4/projects/{id}/services/{slug}": "Get an integration settings",
    "delete /api/v4/projects/{id}/services/{slug}": "Disable an integration",
    "put /api/v4/projects/{id}/services/mock-monitoring": "Create/Edit Mock Monitoring integration",
    "put /api/v4/projects/{id}/services/mock-ci": "Create/Edit Mock Ci integration",
    "put /api/v4/projects/{id}/services/google-cloud-platform-workload-identity-federation": "Create/Edit Google Cloud Platform Workload Identity Federation integration",
    "put /api/v4/projects/{id}/services/google-cloud-platform-artifact-registry": "Create/Edit Google Cloud Platform Artifact Registry integration",
    "put /api/v4/projects/{id}/services/git-guardian": "Create/Edit Git Guardian integration",
    "put /api/v4/projects/{id}/services/github": "Create/Edit Github integration",
    "put /api/v4/projects/{id}/services/squash-tm": "Create/Edit Squash Tm integration",
    "put /api/v4/projects/{id}/services/zentao": "Create/Edit Zentao integration",
    "put /api/v4/projects/{id}/services/webex-teams": "Create/Edit Webex Teams integration",
    "put /api/v4/projects/{id}/services/unify-circuit": "Create/Edit Unify Circuit integration",
    "put /api/v4/projects/{id}/services/telegram": "Create/Edit Telegram integration",
    "put /api/v4/projects/{id}/services/teamcity": "Create/Edit Teamcity integration",
    "put /api/v4/projects/{id}/services/mattermost": "Create/Edit Mattermost integration",
    "put /api/v4/projects/{id}/services/microsoft-teams": "Create/Edit Microsoft Teams integration",
    "put /api/v4/projects/{id}/services/slack": "Create/Edit Slack integration",
    "put /api/v4/projects/{id}/services/clickup": "Create/Edit Clickup integration",
    "put /api/v4/projects/{id}/services/youtrack": "Create/Edit Youtrack integration",
    "put /api/v4/projects/{id}/services/ewm": "Create/Edit Ewm integration",
    "put /api/v4/projects/{id}/services/redmine": "Create/Edit Redmine integration",
    "put /api/v4/projects/{id}/services/pushover": "Create/Edit Pushover integration",
    "put /api/v4/projects/{id}/services/pumble": "Create/Edit Pumble integration",
    "put /api/v4/projects/{id}/services/prometheus": "Create/Edit Prometheus integration",
    "put /api/v4/projects/{id}/services/pivotaltracker": "Create/Edit Pivotaltracker integration",
    "put /api/v4/projects/{id}/services/pipelines-email": "Create/Edit Pipelines Email integration",
    "put /api/v4/projects/{id}/services/packagist": "Create/Edit Packagist integration",
    "put /api/v4/projects/{id}/services/slack-slash-commands": "Create/Edit Slack Slash Commands integration",
    "put /api/v4/projects/{id}/services/mattermost-slash-commands": "Create/Edit Mattermost Slash Commands integration",
    "put /api/v4/projects/{id}/services/jira": "Create/Edit Jira integration",
    "put /api/v4/projects/{id}/services/jenkins": "Create/Edit Jenkins integration",
    "put /api/v4/projects/{id}/services/irker": "Create/Edit Irker integration",
    "put /api/v4/projects/{id}/services/harbor": "Create/Edit Harbor integration",
    "put /api/v4/projects/{id}/services/hangouts-chat": "Create/Edit Hangouts Chat integration",
    "put /api/v4/projects/{id}/services/google-play": "Create/Edit Google Play integration",
    "put /api/v4/projects/{id}/services/gitlab-slack-application": "Create/Edit Gitlab Slack Application integration",
    "put /api/v4/projects/{id}/services/external-wiki": "Create/Edit External Wiki integration",
    "put /api/v4/projects/{id}/services/emails-on-push": "Create/Edit Emails On Push integration",
    "put /api/v4/projects/{id}/services/drone-ci": "Create/Edit Drone Ci integration",
    "put /api/v4/projects/{id}/services/discord": "Create/Edit Discord integration",
    "put /api/v4/projects/{id}/services/diffblue-cover": "Create/Edit Diffblue Cover integration",
    "put /api/v4/projects/{id}/services/datadog": "Create/Edit Datadog integration",
    "put /api/v4/projects/{id}/services/custom-issue-tracker": "Create/Edit Custom Issue Tracker integration",
    "put /api/v4/projects/{id}/services/confluence": "Create/Edit Confluence integration",
    "put /api/v4/projects/{id}/services/campfire": "Create/Edit Campfire integration",
    "put /api/v4/projects/{id}/services/buildkite": "Create/Edit Buildkite integration",
    "put /api/v4/projects/{id}/services/bugzilla": "Create/Edit Bugzilla integration",
    "put /api/v4/projects/{id}/services/bamboo": "Create/Edit Bamboo integration",
    "put /api/v4/projects/{id}/services/assembla": "Create/Edit Assembla integration",
    "put /api/v4/projects/{id}/services/asana": "Create/Edit Asana integration",
    "put /api/v4/projects/{id}/services/apple-app-store": "Create/Edit Apple App Store integration",
    "get /api/v4/projects/{id}/services": "List all active integrations",
    "delete /api/v4/projects/{id}/freeze_periods/{freeze_period_id}": "Delete a freeze period",
    "put /api/v4/projects/{id}/freeze_periods/{freeze_period_id}": "Update a freeze period",
    "get /api/v4/projects/{id}/freeze_periods/{freeze_period_id}": "Get a freeze period",
    "post /api/v4/projects/{id}/freeze_periods": "Create a freeze period",
    "get /api/v4/projects/{id}/freeze_periods": "List freeze periods",
    "delete /api/v4/projects/{id}/repository/files/{file_path}": "Delete an existing file in repository",
    "put /api/v4/projects/{id}/repository/files/{file_path}": "Update existing file in repository",
    "post /api/v4/projects/{id}/repository/files/{file_path}": "Create new file in repository",
    "get /api/v4/projects/{id}/repository/files/{file_path}": "Get a file from the repository",
    "head /api/v4/projects/{id}/repository/files/{file_path}": "Get file metadata from repository",
    "get /api/v4/projects/{id}/repository/files/{file_path}/raw": "Get raw file contents from the repository",
    "get /api/v4/projects/{id}/repository/files/{file_path}/blame": "Get blame file from the repository",
    "head /api/v4/projects/{id}/repository/files/{file_path}/blame": "Get blame file metadata from repository",
    "put /api/v4/projects/{id}/error_tracking/settings": "Update Error Tracking project settings. Available in GitLab 15.10 and later.",
    "patch /api/v4/projects/{id}/error_tracking/settings": "Enable or disable the Error Tracking project settings",
    "get /api/v4/projects/{id}/error_tracking/settings": "Get Error Tracking settings",
    "get /api/v4/projects/{id}/environments/{environment_id}": "Get a specific environment",
    "delete /api/v4/projects/{id}/environments/{environment_id}": "Delete an environment",
    "put /api/v4/projects/{id}/environments/{environment_id}": "Update an existing environment",
    "post /api/v4/projects/{id}/environments/stop_stale": "Stop stale environments",
    "post /api/v4/projects/{id}/environments/{environment_id}/stop": "Stop an environment",
    "delete /api/v4/projects/{id}/environments/review_apps": "Delete multiple stopped review apps",
    "post /api/v4/projects/{id}/environments": "Create a new environment",
    "get /api/v4/projects/{id}/environments": "List environments",
    "post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes/bulk_publish": "Bulk publish all pending draft notes",
    "put /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes/{draft_note_id}/publish": "Publish a pending draft note",
    "delete /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes/{draft_note_id}": "Delete a draft note",
    "put /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes/{draft_note_id}": "Modify an existing draft note",
    "get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes/{draft_note_id}": "Get a single draft note",
    "post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes": "Create a new draft note",
    "get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/draft_notes": "Get a list of merge request draft notes",
    "post /api/v4/projects/{id}/deployments/{deployment_id}/approval": "Approve or reject a blocked deployment",
    "get /api/v4/projects/{id}/deployments/{deployment_id}/merge_requests": "List of merge requests associated with a deployment",
    "delete /api/v4/projects/{id}/deployments/{deployment_id}": "Delete a specific deployment",
    "put /api/v4/projects/{id}/deployments/{deployment_id}": "Update a deployment",
    "get /api/v4/projects/{id}/deployments/{deployment_id}": "Get a specific deployment",
    "post /api/v4/projects/{id}/deployments": "Create a deployment",
    "get /api/v4/projects/{id}/deployments": "List project deployments",
    "delete /api/v4/projects/{id}/deploy_tokens/{token_id}": "Delete a project deploy token",
    "get /api/v4/projects/{id}/deploy_tokens/{token_id}": "Get a project deploy token",
    "post /api/v4/projects/{id}/deploy_tokens": "Create a project deploy token",
    "get /api/v4/projects/{id}/deploy_tokens": "List project deploy tokens",
    "delete /api/v4/projects/{id}/deploy_keys/{key_id}": "Delete deploy key",
    "put /api/v4/projects/{id}/deploy_keys/{key_id}": "Update deploy key",
    "get /api/v4/projects/{id}/deploy_keys/{key_id}": "Get a single deploy key",
    "post /api/v4/projects/{id}/deploy_keys/{key_id}/enable": "Enable a deploy key",
    "post /api/v4/projects/{id}/deploy_keys": "Add deploy key",
    "get /api/v4/projects/{id}/deploy_keys": "List deploy keys for project",
    "post /api/v4/projects/{id}/statuses/{sha}": "Post status to a commit",
    "get /api/v4/projects/{id}/repository/commits/{sha}/statuses": "Get a commit's statuses",
    "get /api/v4/projects/{id}/repository/commits/{sha}/signature": "Get a commit's signature",
    "get /api/v4/projects/{id}/repository/commits/{sha}/merge_requests": "Get Merge Requests associated with a commit",
    "post /api/v4/projects/{id}/repository/commits/{sha}/comments": "Post comment to commit",
    "get /api/v4/projects/{id}/repository/commits/{sha}/comments": "Get a commit's comments",
    "get /api/v4/projects/{id}/repository/commits/{sha}/refs": "Get all references a commit is pushed to",
    "post /api/v4/projects/{id}/repository/commits/{sha}/revert": "Revert a commit in a branch",
    "post /api/v4/projects/{id}/repository/commits/{sha}/cherry_pick": "Cherry pick commit into a branch",
    "get /api/v4/projects/{id}/repository/commits/{sha}/sequence": "Get the sequence count of a commit SHA",
    "get /api/v4/projects/{id}/repository/commits/{sha}/diff": "Get the diff for a specific commit of a project",
    "get /api/v4/projects/{id}/repository/commits/{sha}": "Get a specific commit of a project",
    "post /api/v4/projects/{id}/repository/commits": "Commit multiple file changes as one commit",
    "get /api/v4/projects/{id}/repository/commits": "Get a project repository commits",
    "delete /api/v4/projects/{id}/cluster_agents/{agent_id}": "Delete a registered agent",
    "get /api/v4/projects/{id}/cluster_agents/{agent_id}": "Get details about an agent",
    "post /api/v4/projects/{id}/cluster_agents": "Register an agent with a project",
    "get /api/v4/projects/{id}/cluster_agents": "List the agents for a project",
    "delete /api/v4/projects/{id}/variables/{key}": "Delete an existing variable from a project",
    "put /api/v4/projects/{id}/variables/{key}": "Update an existing variable from a project",
    "get /api/v4/projects/{id}/variables/{key}": "Get the details of a single variable from a project",
    "post /api/v4/projects/{id}/variables": "Create a new variable in a project",
    "get /api/v4/projects/{id}/variables": "Get project variables",
    "delete /api/v4/projects/{id}/triggers/{trigger_id}": "Delete a trigger",
    "put /api/v4/projects/{id}/triggers/{trigger_id}": "Update a trigger token",
    "get /api/v4/projects/{id}/triggers/{trigger_id}": "Get specific trigger token of a project",
    "post /api/v4/projects/{id}/triggers": "Create a trigger token",
    "get /api/v4/projects/{id}/triggers": "Get trigger tokens list",
    "post /api/v4/projects/{id}/(ref/{ref}/)trigger/pipeline": "Trigger a GitLab project pipeline",
    "delete /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/variables/{key}": "Delete a pipeline schedule variable",
    "put /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/variables/{key}": "Edit a pipeline schedule variable",
    "post /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/variables": "Create a new pipeline schedule variable",
    "post /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/play": "Play a scheduled pipeline immediately",
    "delete /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}": "Delete a pipeline schedule",
    "put /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}": "Edit a pipeline schedule",
    "get /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}": "Get a single pipeline schedule",
    "post /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/take_ownership": "Take ownership of a pipeline schedule",
    "post /api/v4/projects/{id}/pipeline_schedules": "Create a new pipeline schedule",
    "get /api/v4/projects/{id}/pipeline_schedules": "Get all pipeline schedules",
    "get /api/v4/projects/{id}/pipeline_schedules/{pipeline_schedule_id}/pipelines": "Get all pipelines triggered from a pipeline schedule",
    "post /api/v4/projects/{id}/pipelines/{pipeline_id}/cancel": "Cancel all builds in the pipeline",
    "post /api/v4/projects/{id}/pipelines/{pipeline_id}/retry": "Retry builds in the pipeline",
    "put /api/v4/projects/{id}/pipelines/{pipeline_id}/metadata": "Updates pipeline metadata",
    "delete /api/v4/projects/{id}/pipelines/{pipeline_id}": "Deletes a pipeline",
    "get /api/v4/projects/{id}/pipelines/{pipeline_id}": "Gets a specific pipeline for the project",
    "get /api/v4/projects/{id}/pipelines/{pipeline_id}/test_report_summary": "Gets the test report summary for a given pipeline",
    "get /api/v4/projects/{id}/pipelines/{pipeline_id}/test_report": "Gets the test report for a given pipeline",
    "get /api/v4/projects/{id}/pipelines/{pipeline_id}/variables": "Gets the variables for a given pipeline",
    "get /api/v4/projects/{id}/pipelines/{pipeline_id}/bridges": "Get pipeline bridge jobs",
    "get /api/v4/projects/{id}/pipelines/{pipeline_id}/jobs": "Get pipeline jobs",
    "get /api/v4/projects/{id}/pipelines/latest": "Gets the latest pipeline for the project branch",
    "post /api/v4/projects/{id}/pipeline": "Create a new pipeline",
    "get /api/v4/projects/{id}/pipelines": "Get all Pipelines of the project",
    "delete /api/v4/projects/{id}/secure_files/{secure_file_id}": "Remove a secure file",
    "get /api/v4/projects/{id}/secure_files/{secure_file_id}": "Get the details of a specific secure file in a project",
    "post /api/v4/projects/{id}/secure_files": "Create a secure file",
    "get /api/v4/projects/{id}/secure_files": "Get list of secure files in a project",
    "get /api/v4/projects/{id}/secure_files/{secure_file_id}/download": "Download secure file",
    "post /api/v4/projects/{id}/runners/reset_registration_token": "Reset the runner registration token for a project",
    "delete /api/v4/projects/{id}/runners/{runner_id}": "Disable a project runner from the project",
    "post /api/v4/projects/{id}/runners": "Enable a runner in project",
    "get /api/v4/projects/{id}/runners": "List project's runners",
    "put /api/v4/projects/{id}/resource_groups/{key}": "Edit an existing resource group",
    "get /api/v4/projects/{id}/resource_groups/{key}": "Get a specific resource group",
    "get /api/v4/projects/{id}/resource_groups/{key}/upcoming_jobs": "List upcoming jobs for a specific resource group",
    "get /api/v4/projects/{id}/resource_groups": "Get all resource groups for a project",
    "post /api/v4/projects/{id}/jobs/{job_id}/play": "Trigger an actionable job (manual, delayed, etc)",
    "post /api/v4/projects/{id}/jobs/{job_id}/erase": "Erase job (remove artifacts and the trace)",
    "post /api/v4/projects/{id}/jobs/{job_id}/retry": "Retry a specific build of a project",
    "post /api/v4/projects/{id}/jobs/{job_id}/cancel": "Cancel a specific job of a project",
    "get /api/v4/projects/{id}/jobs/{job_id}/trace": "Get a trace of a specific job of a project",
    "get /api/v4/projects/{id}/jobs/{job_id}": "Get a specific job of a project",
    "get /api/v4/projects/{id}/jobs": "Get a projects jobs",
    "delete /api/v4/projects/{id}/artifacts": "Expire the artifacts files from a project",
    "delete /api/v4/projects/{id}/jobs/{job_id}/artifacts": "Delete the artifacts files from a job",
    "get /api/v4/projects/{id}/jobs/{job_id}/artifacts": "Download the artifacts archive from a job",
    "post /api/v4/projects/{id}/jobs/{job_id}/artifacts/keep": "Keep the artifacts to prevent them from being deleted",
    "get /api/v4/projects/{id}/jobs/{job_id}/artifacts/*artifact_path": "Download a specific file from artifacts archive",
    "get /api/v4/projects/{id}/jobs/artifacts/{ref_name}/raw/*artifact_path": "Download a specific file from artifacts archive from a ref",
    "get /api/v4/projects/{id}/jobs/artifacts/{ref_name}/download": "Download the artifacts archive from a job",
    "delete /api/v4/projects/{id}/repository/merged_branches": "Delete all merged branches",
    "delete /api/v4/projects/{id}/repository/branches/{branch}": "Delete a branch",
    "get /api/v4/projects/{id}/repository/branches/{branch}": "Get a single repository branch",
    "head /api/v4/projects/{id}/repository/branches/{branch}": "Check if a branch exists",
    "post /api/v4/projects/{id}/repository/branches": "Create branch",
    "get /api/v4/projects/{id}/repository/branches": "Get a project repository branches",
    "put /api/v4/projects/{id}/repository/branches/{branch}/unprotect": "Unprotect a single branch",
    "put /api/v4/projects/{id}/repository/branches/{branch}/protect": "Protect a single branch",
    "delete /api/v4/projects/{id}/badges/{badge_id}": "Removes a badge from the project.",
    "put /api/v4/projects/{id}/badges/{badge_id}": "Updates a badge of a project.",
    "get /api/v4/projects/{id}/badges/{badge_id}": "Gets a badge of a project.",
    "post /api/v4/projects/{id}/badges": "Adds a badge to a project.",
    "get /api/v4/projects/{id}/badges": "Gets a list of project badges viewable by the authenticated user.",
    "get /api/v4/projects/{id}/badges/render": "Preview a badge from a project.",
    "delete /api/v4/projects/{id}/access_requests/{user_id}": "Denies an access request for the given user.",
    "put /api/v4/projects/{id}/access_requests/{user_id}/approve": "Approves an access request for the given user.",
    "post /api/v4/projects/{id}/access_requests": "Requests access for the authenticated user to a project.",
    "get /api/v4/projects/{id}/access_requests": "Gets a list of access requests for a project.",
    "delete /api/v4/projects/{id}/alert_management_alerts/{alert_iid}/metric_images/{metric_image_id}": "Remove a metric image for an alert",
    "put /api/v4/projects/{id}/alert_management_alerts/{alert_iid}/metric_images/{metric_image_id}": "Update a metric image for an alert",
    "get /api/v4/projects/{id}/alert_management_alerts/{alert_iid}/metric_images": "Metric Images for alert",
    "post /api/v4/projects/{id}/alert_management_alerts/{alert_iid}/metric_images": "Upload a metric image for an alert",
    "post /api/v4/projects/{id}/alert_management_alerts/{alert_iid}/metric_images/authorize": "Workhorse authorize metric image file upload",
    "delete /api/v4/projects/{id}/cluster_agents/{agent_id}/tokens/{token_id}": "Revoke an agent token",
    "get /api/v4/projects/{id}/cluster_agents/{agent_id}/tokens/{token_id}": "Get a single agent token",
    "post /api/v4/projects/{id}/cluster_agents/{agent_id}/tokens": "Create an agent token",
    "get /api/v4/projects/{id}/cluster_agents/{agent_id}/tokens": "List tokens for an agent",
    "get /api/v4/projects/{id}/packages/composer/archives/*package_name": "Composer package endpoint to download a package archive",
    "post /api/v4/projects/{id}/packages/composer": "Composer packages endpoint for registering packages",
    "get /api/v4/projects/{id}/packages/conan/v1/conans/search": "Search for packages",
    "get /api/v4/projects/{id}/packages/conan/v1/ping": "Ping the Conan API",
    "get /api/v4/projects/{id}/packages/conan/v1/users/check_credentials": "Check for valid user credentials per conan CLI",
    "get /api/v4/projects/{id}/packages/conan/v1/users/authenticate": "Authenticate user against conan CLI",
    "delete /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}": "Delete Package",
    "get /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}": "Recipe Snapshot",
    "post /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/upload_urls": "Recipe Upload Urls",
    "post /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/upload_urls": "Package Upload Urls",
    "get /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/download_urls": "Recipe Download Urls",
    "get /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/download_urls": "Package Download Urls",
    "get /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/digest": "Recipe Digest",
    "get /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/digest": "Package Digest",
    "get /api/v4/projects/{id}/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}": "Package Snapshot",
    "put /api/v4/projects/{id}/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/export/{file_name}/authorize": "Workhorse authorize the conan recipe file",
    "put /api/v4/projects/{id}/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/export/{file_name}": "Upload recipe package files",
    "get /api/v4/projects/{id}/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/export/{file_name}": "Download recipe files",
    "put /api/v4/projects/{id}/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/package/{conan_package_reference}/{package_revision}/{file_name}": "Upload package files",
    "get /api/v4/projects/{id}/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/package/{conan_package_reference}/{package_revision}/{file_name}": "Download package files",
    "put /api/v4/projects/{id}/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/package/{conan_package_reference}/{package_revision}/{file_name}/authorize": "Workhorse authorize the conan package file",
    "get /api/v4/projects/{id}/packages/debian/dists/*distribution/InRelease": "The signed Release file",
    "get /api/v4/projects/{id}/packages/debian/dists/*distribution/Release": "The unsigned Release file",
    "get /api/v4/projects/{id}/packages/debian/dists/*distribution/Release.gpg": "The Release file signature",
    "get /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/debian-installer/binary-{architecture}/by-hash/SHA256/{file_sha256}": "The installer (udeb) binary files index by hash",
    "get /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/debian-installer/binary-{architecture}/Packages": "The installer (udeb) binary files index",
    "get /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/source/by-hash/SHA256/{file_sha256}": "The source files index by hash",
    "get /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/source/Sources": "The source files index",
    "get /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/binary-{architecture}/by-hash/SHA256/{file_sha256}": "The binary files index by hash",
    "get /api/v4/projects/{id}/packages/debian/dists/*distribution/{component}/binary-{architecture}/Packages": "The binary files index",
    "get /api/v4/projects/{id}/packages/debian/pool/{distribution}/{letter}/{package_name}/{package_version}/{file_name}": "Download Debian package",
    "put /api/v4/projects/{id}/packages/debian/{file_name}/authorize": "Authorize Debian package upload",
    "put /api/v4/projects/{id}/packages/debian/{file_name}": "Upload Debian package",
    "delete /api/v4/projects/{id}/error_tracking/client_keys/{key_id}": "Delete a client key",
    "post /api/v4/projects/{id}/error_tracking/client_keys": "Create a client key",
    "get /api/v4/projects/{id}/error_tracking/client_keys": "List project client keys",
    "post /api/v4/projects/{id}/feature_flags": "Create a new feature flag",
    "get /api/v4/projects/{id}/feature_flags": "List feature flags for a project",
    "delete /api/v4/projects/{id}/feature_flags/{feature_flag_name}": "Delete a feature flag",
    "put /api/v4/projects/{id}/feature_flags/{feature_flag_name}": "Update a feature flag",
    "get /api/v4/projects/{id}/feature_flags/{feature_flag_name}": "Get a single feature flag",
    "post /api/v4/projects/{id}/feature_flags_user_lists": "Create a feature flag user list",
    "get /api/v4/projects/{id}/feature_flags_user_lists": "List all feature flag user lists for a project",
    "delete /api/v4/projects/{id}/feature_flags_user_lists/{iid}": "Delete feature flag user list",
    "put /api/v4/projects/{id}/feature_flags_user_lists/{iid}": "Update a feature flag user list",
    "get /api/v4/projects/{id}/feature_flags_user_lists/{iid}": "Get a feature flag user list",
    "get /api/v4/projects/{id}/packages/generic/{package_name}/*package_version/{file_name}": "Download package file",
    "put /api/v4/projects/{id}/packages/generic/{package_name}/*package_version/{file_name}": "Upload package file",
    "put /api/v4/projects/{id}/packages/generic/{package_name}/*package_version/{file_name}/authorize": "Workhorse authorize generic package file",
    "get /api/v4/projects/{id}/packages/go/*module_name/@v/{module_version}.zip": "Download module source",
    "get /api/v4/projects/{id}/packages/go/*module_name/@v/{module_version}.mod": "Download module file",
    "get /api/v4/projects/{id}/packages/go/*module_name/@v/{module_version}.info": "Version metadata",
    "get /api/v4/projects/{id}/packages/go/*module_name/@v/list": "List",
    "post /api/v4/projects/{id}/packages/helm/api/{channel}/charts": "Upload a chart",
    "post /api/v4/projects/{id}/packages/helm/api/{channel}/charts/authorize": "Authorize a chart upload from workhorse",
    "get /api/v4/projects/{id}/packages/helm/{channel}/charts/{file_name}.tgz": "Download a chart",
    "get /api/v4/projects/{id}/packages/helm/{channel}/index.yaml": "Download a chart index",
    "post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/approvals": "Deprecated in 16.0: Use the merge request approvals API instead. Change approval-related configuration",
    "get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/approvals": "List approvals for merge request",
    "get /api/v4/projects/{id}/merge_requests/{merge_request_iid}/approval_state": "Get approval state of merge request",
    "put /api/v4/projects/{id}/merge_requests/{merge_request_iid}/reset_approvals": "Remove all merge request approvals",
    "post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/unapprove": "Remove an approval from a merge request",
    "post /api/v4/projects/{id}/merge_requests/{merge_request_iid}/approve": "Approve a merge request",
    "get /api/v4/projects/{id}/packages/ml_models/{model_version_id}/files/(*path/){file_name}": "Download an ml_model package file",
    "put /api/v4/projects/{id}/packages/ml_models/{model_version_id}/files/(*path/){file_name}": "Workhorse upload model package file",
    "put /api/v4/projects/{id}/packages/ml_models/{model_version_id}/files/(*path/){file_name}/authorize": "Workhorse authorize model package file",
    "post /api/v4/projects/{id}/packages/npm/-/npm/v1/security/audits/quick": "NPM registry quick audit endpoint",
    "post /api/v4/projects/{id}/packages/npm/-/npm/v1/security/advisories/bulk": "NPM registry bulk advisory endpoint",
    "get /api/v4/projects/{id}/packages/npm/*package_name": "NPM registry metadata endpoint",
    "put /api/v4/projects/{id}/packages/npm/{package_name}": "Create or deprecate NPM package",
    "get /api/v4/projects/{id}/packages/npm/*package_name/-/*file_name": "Download the NPM tarball",
    "get /api/v4/projects/{id}/packages/npm/-/package/*package_name/dist-tags": "Get all tags for a given an NPM package",
    "delete /api/v4/projects/{id}/packages/npm/-/package/*package_name/dist-tags/{tag}": "Deletes the given tag",
    "put /api/v4/projects/{id}/packages/npm/-/package/*package_name/dist-tags/{tag}": "Create or Update the given tag for the given NPM package and version",
    "delete /api/v4/projects/{id}/packages/nuget/*package_name/*package_version": "The NuGet Package Delete endpoint",
    "put /api/v4/projects/{id}/packages/nuget/symbolpackage/authorize": "The NuGet Symbol Package Authorize endpoint",
    "put /api/v4/projects/{id}/packages/nuget/symbolpackage": "The NuGet Symbol Package Publish endpoint",
    "put /api/v4/projects/{id}/packages/nuget/authorize": "The NuGet Package Authorize endpoint",
    "put /api/v4/projects/{id}/packages/nuget": "The NuGet V3 Feed Package Publish endpoint",
    "get /api/v4/projects/{id}/packages/nuget/index": "The NuGet V3 Feed Service Index",
    "get /api/v4/projects/{id}/packages/nuget/symbolfiles/*file_name/*signature/*same_file_name": "The NuGet Symbol File Download Endpoint",
    "put /api/v4/projects/{id}/packages/nuget/v2/authorize": "The NuGet V2 Feed Package Authorize endpoint",
    "put /api/v4/projects/{id}/packages/nuget/v2": "The NuGet V2 Feed Package Publish endpoint",
    "get /api/v4/projects/{id}/packages/nuget/v2": "The NuGet V2 Feed Service Index",
    "get /api/v4/projects/{id}/packages/nuget/v2/$metadata": "The NuGet V2 Feed Package $metadata endpoint",
    "get /api/v4/projects/{id}/packages/nuget/metadata/*package_name/*package_version": "The NuGet Metadata Service - Package name and version level",
    "get /api/v4/projects/{id}/packages/nuget/metadata/*package_name/index": "The NuGet Metadata Service - Package name level",
    "get /api/v4/projects/{id}/packages/nuget/query": "The NuGet Search Service",
    "get /api/v4/projects/{id}/packages/nuget/download/*package_name/*package_version/*package_filename": "The NuGet Content Service - content request",
    "get /api/v4/projects/{id}/packages/nuget/download/*package_name/index": "The NuGet Content Service - index request",
    "get /api/v4/projects/{project_id}/packages/nuget/v2/Packages\\(Id='*package_name',Version='*package_version'\\)": "The NuGet V2 Feed Single Package Metadata endpoint",
    "get /api/v4/projects/{project_id}/packages/nuget/v2/Packages\\(\\)": "The NuGet V2 Feed Enumerate Packages endpoint",
    "get /api/v4/projects/{project_id}/packages/nuget/v2/FindPackagesById\\(\\)": "The NuGet V2 Feed Find Packages by ID endpoint",
    "delete /api/v4/projects/{id}/debian_distributions/{codename}": "Delete a Debian Distribution",
    "put /api/v4/projects/{id}/debian_distributions/{codename}": "Update a Debian Distribution",
    "get /api/v4/projects/{id}/debian_distributions/{codename}": "Get a Debian Distribution",
    "get /api/v4/projects/{id}/debian_distributions/{codename}/key.asc": "Get a Debian Distribution Key",
    "get /api/v4/projects/{id}/debian_distributions": "Get a list of Debian Distributions",
    "post /api/v4/projects/{id}/debian_distributions": "Create a Debian Distribution",
    "delete /api/v4/projects/{id}/hooks/{hook_id}/url_variables/{key}": "Un-Set a url variable",
    "put /api/v4/projects/{id}/hooks/{hook_id}/url_variables/{key}": "Set a url variable",
    "get /api/v4/projects/{id}/audit_events/{audit_event_id}": "Get a specific audit event in this project.",
    "get /api/v4/projects/{id}/audit_events": "Get a list of audit events in this project.",
    "post /api/v4/projects/{id}/packages/pypi/authorize": "Authorize the PyPi package upload from workhorse",
    "post /api/v4/projects/{id}/packages/pypi": "The PyPi Package upload endpoint",
    "get /api/v4/projects/{id}/packages/pypi/simple/*package_name": "The PyPi Simple Project Package Endpoint",
    "get /api/v4/projects/{id}/packages/pypi/simple": "The PyPi Simple Project Index Endpoint",
    "get /api/v4/projects/{id}/packages/pypi/files/{sha256}/*file_identifier": "The PyPi package download endpoint",
    "post /api/v4/projects/{id}/releases/{tag_name}/assets/links": "Create a release link",
    "get /api/v4/projects/{id}/releases/{tag_name}/assets/links": "List links of a release",
    "delete /api/v4/projects/{id}/releases/{tag_name}/assets/links/{link_id}": "Delete a release link",
    "put /api/v4/projects/{id}/releases/{tag_name}/assets/links/{link_id}": "Update a release link",
    "get /api/v4/projects/{id}/releases/{tag_name}/assets/links/{link_id}": "Get a release link",
    "post /api/v4/projects/{id}/packages/rpm/authorize": "Authorize package upload from workhorse",
    "post /api/v4/projects/{id}/packages/rpm": "Upload a RPM package",
    "get /api/v4/projects/{id}/packages/rpm/*package_file_id/*file_name": "Download RPM package files",
    "get /api/v4/projects/{id}/packages/rpm/repodata/*file_name": "Download repository metadata files",
    "get /api/v4/projects/{id}/packages/rubygems/gems/{file_name}": "Download the .gem package",
    "get /api/v4/projects/{id}/packages/rubygems/quick/Marshal.4.8/{file_name}": "Download the gemspec file",
    "get /api/v4/projects/{id}/packages/rubygems/{file_name}": "Download the spec index file",
    "get /api/v4/projects/{id}/packages/rubygems/api/v1/dependencies": "Fetch a list of dependencies",
    "post /api/v4/projects/{id}/packages/rubygems/api/v1/gems": "Upload a gem",
    "post /api/v4/projects/{id}/packages/rubygems/api/v1/gems/authorize": "Authorize a gem upload from workhorse",
    "get /api/v4/projects/{id}/packages/terraform/modules/{module_name}/{module_system}": "Download the latest version of a module",
    "get /api/v4/projects/{id}/packages/terraform/modules/{module_name}/{module_system}/*module_version": "Download a specific version of a module",
    "put /api/v4/projects/{id}/packages/terraform/modules/{module_name}/{module_system}/*module_version/file": "Upload Terraform Module package file",
    "put /api/v4/projects/{id}/packages/terraform/modules/{module_name}/{module_system}/*module_version/file/authorize": "Workhorse authorize Terraform Module package file",
    "delete /api/v4/projects/{id}/terraform/state/{name}/lock": "Unlock a Terraform state of a certain name",
    "post /api/v4/projects/{id}/terraform/state/{name}/lock": "Lock a Terraform state of a certain name",
    "delete /api/v4/projects/{id}/terraform/state/{name}": "Delete a Terraform state of a certain name",
    "post /api/v4/projects/{id}/terraform/state/{name}": "Add a new Terraform state or update an existing one",
    "get /api/v4/projects/{id}/terraform/state/{name}": "Get a Terraform state by its name",
    "delete /api/v4/projects/{id}/terraform/state/{name}/versions/{serial}": "Delete a Terraform state version",
    "get /api/v4/projects/{id}/terraform/state/{name}/versions/{serial}": "Get a Terraform state version",
    "get /api/v4/admin/batched_background_migrations/{id}": "Retrieve a batched background migration",
    "get /api/v4/admin/batched_background_migrations": "Get the list of batched background migrations",
    "put /api/v4/admin/batched_background_migrations/{id}/resume": "Resume a batched background migration",
    "put /api/v4/admin/batched_background_migrations/{id}/pause": "Pause a batched background migration",
    "delete /api/v4/admin/ci/variables/{key}": "Delete an existing instance-level variable",
    "put /api/v4/admin/ci/variables/{key}": "Update an instance-level variable",
    "get /api/v4/admin/ci/variables/{key}": "Get the details of a specific instance-level variable",
    "post /api/v4/admin/ci/variables": "Create a new instance-level variable",
    "get /api/v4/admin/ci/variables": "List all instance-level variables",
    "get /api/v4/admin/databases/{database_name}/dictionary/tables/{table_name}": "Retrieve dictionary details",
    "delete /api/v4/admin/clusters/{cluster_id}": "Delete instance cluster",
    "put /api/v4/admin/clusters/{cluster_id}": "Edit instance cluster",
    "get /api/v4/admin/clusters/{cluster_id}": "Get a single instance cluster",
    "post /api/v4/admin/clusters/add": "Add existing instance cluster",
    "get /api/v4/admin/clusters": "List instance clusters",
    "post /api/v4/admin/migrations/{timestamp}/mark": "Mark the migration as successfully executed",
    "delete /api/v4/broadcast_messages/{id}": "Delete a broadcast message",
    "put /api/v4/broadcast_messages/{id}": "Update a broadcast message",
    "get /api/v4/broadcast_messages/{id}": "Get a specific broadcast message",
    "post /api/v4/broadcast_messages": "Create a broadcast message",
    "get /api/v4/broadcast_messages": "Get all broadcast messages",
    "delete /api/v4/applications/{id}": "Delete an application",
    "get /api/v4/applications": "Get applications",
    "post /api/v4/applications": "Create a new application",
    "get /api/v4/avatar": "Return avatar url for a user",
    "get /api/v4/bulk_imports/{import_id}/entities/{entity_id}/failures": "Get GitLab Migration entity failures",
    "get /api/v4/bulk_imports/{import_id}/entities/{entity_id}": "Get GitLab Migration entity details",
    "get /api/v4/bulk_imports/{import_id}/entities": "List GitLab Migration entities",
    "get /api/v4/bulk_imports/{import_id}": "Get GitLab Migration details",
    "get /api/v4/bulk_imports/entities": "List all GitLab Migrations' entities",
    "get /api/v4/bulk_imports": "List all GitLab Migrations",
    "post /api/v4/bulk_imports": "Start a new GitLab Migration",
    "get /api/v4/job/allowed_agents": "Get current agents",
    "get /api/v4/job": "Get current job using job token",
    "post /api/v4/runners/reset_registration_token": "Reset instance's runner registration token",
    "post /api/v4/runners/{id}/reset_authentication_token": "Reset runner's authentication token",
    "get /api/v4/runners/{id}/jobs": "List runner's jobs",
    "delete /api/v4/runners/{id}": "Delete a runner",
    "put /api/v4/runners/{id}": "Update details of a runner",
    "get /api/v4/runners/{id}": "Get runner's details",
    "get /api/v4/runners/all": "List all runners",
    "get /api/v4/runners": "List owned runners",
    "delete /api/v4/runners": "Delete a runner by authentication token",
    "post /api/v4/runners": "Register a new runner",
    "post /api/v4/runners/reset_authentication_token": "Reset runner authentication token with current token",
    "post /api/v4/runners/verify": "Verify authentication for a registered runner",
    "delete /api/v4/runners/managers": "Internal endpoint that deletes a runner manager by authentication token and system ID.",
    "get /api/v4/jobs/{id}/artifacts": "Download the artifacts file for job",
    "post /api/v4/jobs/{id}/artifacts": "Upload a job artifact",
    "post /api/v4/jobs/{id}/artifacts/authorize": "Authorize uploading job artifact",
    "patch /api/v4/jobs/{id}/trace": "Append a patch to the job trace",
    "put /api/v4/jobs/{id}": "Update a job",
    "post /api/v4/jobs/request": "Request a job",
    "get /api/v4/group/{id}/-/packages/composer/*package_name": "Composer packages endpoint at group level for package versions metadata",
    "get /api/v4/group/{id}/-/packages/composer/p2/*package_name": "Composer v2 packages p2 endpoint at group level for package versions metadata",
    "get /api/v4/group/{id}/-/packages/composer/p/{sha}": "Composer packages endpoint at group level for packages list",
    "get /api/v4/group/{id}/-/packages/composer/packages": "Composer packages endpoint at group level",
    "get /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}/*module_version": "Get details about specific version of a module",
    "get /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}/*module_version/file": "Download specific version of a module",
    "get /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}/*module_version/download": "Get download location for specific version of a module",
    "get /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}": "Get details about the latest version of a module",
    "get /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}/download": "Get download location for the latest version of a module",
    "get /api/v4/packages/terraform/modules/v1/{module_namespace}/{module_name}/{module_system}/versions": "List versions for a module",
    "post /api/v4/packages/npm/-/npm/v1/security/audits/quick": "NPM registry quick audit endpoint",
    "post /api/v4/packages/npm/-/npm/v1/security/advisories/bulk": "NPM registry bulk advisory endpoint",
    "get /api/v4/packages/npm/*package_name": "NPM registry metadata endpoint",
    "delete /api/v4/packages/npm/-/package/*package_name/dist-tags/{tag}": "Deletes the given tag",
    "put /api/v4/packages/npm/-/package/*package_name/dist-tags/{tag}": "Create or Update the given tag for the given NPM package and version",
    "get /api/v4/packages/npm/-/package/*package_name/dist-tags": "Get all tags for a given an NPM package",
    "get /api/v4/packages/maven/*path/{file_name}": "Download the maven package file at instance level",
    "put /api/v4/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/package/{conan_package_reference}/{package_revision}/{file_name}": "Upload package files",
    "get /api/v4/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/package/{conan_package_reference}/{package_revision}/{file_name}": "Download package files",
    "put /api/v4/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/package/{conan_package_reference}/{package_revision}/{file_name}/authorize": "Workhorse authorize the conan package file",
    "put /api/v4/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/export/{file_name}/authorize": "Workhorse authorize the conan recipe file",
    "put /api/v4/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/export/{file_name}": "Upload recipe package files",
    "get /api/v4/packages/conan/v1/files/{package_name}/{package_version}/{package_username}/{package_channel}/{recipe_revision}/export/{file_name}": "Download recipe files",
    "delete /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}": "Delete Package",
    "get /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}": "Recipe Snapshot",
    "post /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/upload_urls": "Recipe Upload Urls",
    "post /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/upload_urls": "Package Upload Urls",
    "get /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/download_urls": "Recipe Download Urls",
    "get /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/download_urls": "Package Download Urls",
    "get /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/digest": "Recipe Digest",
    "get /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}/digest": "Package Digest",
    "get /api/v4/packages/conan/v1/conans/{package_name}/{package_version}/{package_username}/{package_channel}/packages/{conan_package_reference}": "Package Snapshot",
    "get /api/v4/packages/conan/v1/users/check_credentials": "Check for valid user credentials per conan CLI",
    "get /api/v4/packages/conan/v1/users/authenticate": "Authenticate user against conan CLI",
    "get /api/v4/packages/conan/v1/conans/search": "Search for packages",
    "get /api/v4/packages/conan/v1/ping": "Ping the Conan API",
    "post /api/v4/container_registry_event/events": "Receives notifications from the container registry when an operation occurs",
    "get /api/v4/registry/repositories/{id}": "Get a container repository",
    "get /api/v4/events": "List currently authenticated user's events",
    "get /api/v4/users/{user_id}/memberships": "Get memberships",
    "post /api/v4/users/{id}/unban": "Unban a user. Available only for admins.",
    "post /api/v4/users/{id}/ban": "Ban a user. Available only for admins.",
    "post /api/v4/users/{id}/unblock": "Unblock a user. Available only for admins.",
    "post /api/v4/users/{id}/block": "Block a user. Available only for admins.",
    "post /api/v4/users/{id}/deactivate": "Deactivate an active user. Available only for admins.",
    "post /api/v4/users/{id}/reject": "Reject a pending user. Available only for admins.",
    "post /api/v4/users/{id}/approve": "Approve a pending user. Available only for admins.",
    "post /api/v4/users/{id}/activate": "Activate a deactivated user. Available only for admins.",
    "delete /api/v4/users/{id}": "Delete a user. Available only for admins.",
    "put /api/v4/users/{id}": "Update a user. Available only for admins.",
    "get /api/v4/users/{id}": "Get a single user",
    "delete /api/v4/users/{id}/emails/{email_id}": "Delete an email address of a specified user. Available only for admins.",
    "get /api/v4/users/{id}/emails": "Get the emails addresses of a specified user. Available only for admins.",
    "post /api/v4/users/{id}/emails": "Add an email address to a specified user. Available only for admins.",
    "post /api/v4/users/{id}/gpg_keys/{key_id}/revoke": "Revokes an existing GPG key from a specified user. Available only for admins.",
    "delete /api/v4/users/{id}/gpg_keys/{key_id}": "Delete an existing GPG key from a specified user. Available only for admins.",
    "get /api/v4/users/{id}/gpg_keys/{key_id}": "Get a specific GPG key for a given user.",
    "get /api/v4/users/{id}/gpg_keys": "Get the GPG keys of a specified user.",
    "post /api/v4/users/{id}/gpg_keys": "Add a GPG key to a specified user. Available only for admins.",
    "delete /api/v4/users/{id}/keys/{key_id}": "Delete an existing SSH key from a specified user. Available only for admins.",
    "get /api/v4/users/{id}/keys/{key_id}": "Get a SSH key of a specified user.",
    "get /api/v4/users/{user_id}/keys": "Get the SSH keys of a specified user.",
    "post /api/v4/users/{user_id}/keys": "Add an SSH key to a specified user. Available only for admins.",
    "get /api/v4/users/{user_id}/project_deploy_keys": "Get the project-level Deploy keys that a specified user can access to.",
    "delete /api/v4/users/{id}/identities/{provider}": "Delete a user's identity. Available only for admins",
    "patch /api/v4/users/{id}/disable_two_factor": "Disable two factor authentication for a user. Available only for admins",
    "post /api/v4/users": "Create a user. Available only for admins.",
    "get /api/v4/users": "Get the list of users",
    "get /api/v4/users/{id}/followers": "Get the followers of a user",
    "get /api/v4/users/{id}/following": "Get the users who follow a user",
    "post /api/v4/users/{id}/unfollow": "Unfollow a user",
    "post /api/v4/users/{id}/follow": "Follow a user",
    "get /api/v4/users/{user_id}/status": "Get the status of a user",
    "delete /api/v4/users/{id}/custom_attributes/{key}": "Delete a custom attribute on a user",
    "put /api/v4/users/{id}/custom_attributes/{key}": "Set a custom attribute on a user",
    "get /api/v4/users/{id}/custom_attributes/{key}": "Get a custom attribute on a user",
    "get /api/v4/users/{id}/custom_attributes": "Get all custom attributes on a user",
    "get /api/v4/users/{user_id}/starred_projects": "Get projects starred by a user",
    "get /api/v4/users/{user_id}/contributed_projects": "Get projects that a user has contributed to",
    "get /api/v4/users/{user_id}/projects": "Get a user projects",
    "get /api/v4/users/{id}/events": "Get the contribution events of a specified user",
    "get /api/v4/users/{id}/associations_count": "Returns a list of a specified user's count of projects, groups, issues and merge requests.",
    "delete /api/v4/users/{user_id}/impersonation_tokens/{impersonation_token_id}": "Revoke a impersonation token. Available only for admins.",
    "get /api/v4/users/{user_id}/impersonation_tokens/{impersonation_token_id}": "Retrieve impersonation token. Available only for admins.",
    "post /api/v4/users/{user_id}/impersonation_tokens": "Create a impersonation token. Available only for admins.",
    "get /api/v4/users/{user_id}/impersonation_tokens": "Retrieve impersonation tokens. Available only for admins.",
    "post /api/v4/users/{user_id}/personal_access_tokens": "Create a personal access token. Available only for admins.",
    "delete /api/v4/features/{name}": "Delete a feature",
    "post /api/v4/features/{name}": "Set or create a feature",
    "get /api/v4/features/definitions": "List all feature definitions",
    "get /api/v4/features": "List all features",
    "post /api/v4/geo/status": "Internal endpoint that posts the current node status",
    "get /api/v4/geo/repositories/{gl_repository}/pipeline_refs": "Used by secondary runners to verify the secondary instance has the very latest version",
    "get /api/v4/geo/retrieve/{replicable_name}/{replicable_id}": "Internal endpoint that returns a replicable file",
    "get /api/v4/geo/proxy": "Determine if a Geo site should proxy requests",
    "post /api/v4/geo/proxy_git_ssh/receive_pack": "Internal endpoint that posts git-receive-pack for git push",
    "post /api/v4/geo/proxy_git_ssh/info_refs_receive_pack": "Internal endpoint that returns git-received-pack output for git push",
    "post /api/v4/geo/proxy_git_ssh/upload_pack": "Internal endpoint that posts git-upload-pack for git clone/pull",
    "post /api/v4/geo/proxy_git_ssh/info_refs_upload_pack": "Internal endpoint that returns info refs upload pack for git clone/pull",
    "post /api/v4/geo/node_proxy/{id}/graphql": "Query the GraphQL endpoint of an existing Geo node",
    "post /api/v4/integrations/jira_connect/subscriptions": "Subscribe a namespace to a JiraConnectInstallation",
    "post /api/v4/integrations/slack/events": "Receive Slack events",
    "get /api/v4/keys": "Get user by fingerprint of SSH key",
    "get /api/v4/keys/{id}": "Get single ssh key by id. Only available to admin users",
    "post /api/v4/markdown": "Render an arbitrary Markdown document",
    "get /api/v4/merge_requests": "List merge requests",
    "post /api/v4/environments/{id}/metrics_dashboard/annotations": "Create a new annotation",
    "post /api/v4/clusters/{id}/metrics_dashboard/annotations": "Create a new annotation",
    "get /api/v4/namespaces/{id}/exists": "Get existence of a namespace",
    "get /api/v4/namespaces/{id}": "Get namespace by ID",
    "put /api/v4/namespaces/{id}": "Update a namespace",
    "get /api/v4/namespaces": "List namespaces",
    "get /api/v4/namespaces/storage/limit_exclusions": "Retrieve all limit exclusions",
    "delete /api/v4/namespaces/{id}/storage/limit_exclusion": "Removes a storage limit exclusion for a Namespace",
    "post /api/v4/namespaces/{id}/storage/limit_exclusion": "Creates a storage limit exclusion for a Namespace",
    "put /api/v4/namespaces/{id}/gitlab_subscription": "Update the subscription for the namespace",
    "get /api/v4/namespaces/{id}/gitlab_subscription": "Returns the subscription for the namespace",
    "post /api/v4/namespaces/{id}/gitlab_subscription": "Create a subscription for the namespace",
    "get /api/v4/pages/domains": "Get all pages domains",
    "delete /api/v4/personal_access_tokens/{id}": "Revoke a personal access token",
    "get /api/v4/personal_access_tokens/{id}": "Get single personal access token",
    "post /api/v4/personal_access_tokens/{id}/rotate": "Rotate personal access token",
    "get /api/v4/personal_access_tokens": "List personal access tokens",
    "post /api/v4/personal_access_tokens/self/rotate": "Rotate a personal access token",
    "delete /api/v4/personal_access_tokens/self": "Revoke a personal access token",
    "get /api/v4/personal_access_tokens/self": "Get single personal access token",
    "post /api/v4/project_repository_storage_moves": "Schedule bulk project repository storage moves",
    "get /api/v4/project_repository_storage_moves": "Get a list of all project repository storage moves",
    "get /api/v4/project_repository_storage_moves/{repository_storage_move_id}": "Get a project repository storage move",
    "post /api/v4/snippets/{id}/repository_storage_moves": "Schedule a snippet repository storage move",
    "get /api/v4/snippets/{id}/repository_storage_moves": "Get a list of all snippets repository storage moves",
    "get /api/v4/snippets/{id}/repository_storage_moves/{repository_storage_move_id}": "Get a snippet repository storage move",
    "get /api/v4/snippets/{id}/user_agent_detail": "Get the user agent details for a snippet",
    "get /api/v4/snippets/{id}/files/{ref}/{file_path}/raw": "Get raw snippet file contents from the repository",
    "get /api/v4/snippets/{id}/raw": "Get a raw snippet",
    "delete /api/v4/snippets/{id}": "Remove snippet",
    "put /api/v4/snippets/{id}": "Update an existing snippet",
    "get /api/v4/snippets/{id}": "Get a single snippet",
    "post /api/v4/snippets": "Create new snippet",
    "get /api/v4/snippets": "Get a snippets list for an authenticated user",
    "get /api/v4/snippets/all": "List all snippets current_user has access to",
    "get /api/v4/snippets/public": "List all public personal snippets current_user has access to",
    "post /api/v4/snippet_repository_storage_moves": "Schedule bulk snippet repository storage moves",
    "get /api/v4/snippet_repository_storage_moves": "Get a list of all snippet repository storage moves",
    "get /api/v4/snippet_repository_storage_moves/{repository_storage_move_id}": "Get a snippet repository storage move",
    "put /api/v4/suggestions/batch_apply": "Apply multiple suggestion patches in the Merge Request where they were created",
    "put /api/v4/suggestions/{id}/apply": "Apply suggestion patch in the Merge Request it was created",
    "delete /api/v4/hooks/{hook_id}": "Delete system hook",
    "put /api/v4/hooks/{hook_id}": "Edit system hook",
    "get /api/v4/hooks/{hook_id}": "Get system hook",
    "post /api/v4/hooks": "Add new system hook",
    "get /api/v4/hooks": "List system hooks",
    "delete /api/v4/hooks/{hook_id}/url_variables/{key}": "Un-Set a url variable",
    "put /api/v4/hooks/{hook_id}/url_variables/{key}": "Set a url variable",
    "get /api/v4/feature_flags/unleash/{project_id}/client/features": "Get a list of features",
    "get /api/v4/feature_flags/unleash/{project_id}/features": "Get a list of features (deprecated, v2 client support)",
    "get /api/v4/usage_data/service_ping": "Get the latest ServicePing payload",
    "get /api/v4/usage_data/queries": "Get raw SQL queries for usage data SQL metrics",
    "get /api/v4/usage_data/non_sql_metrics": "Get Non SQL usage ping metrics",
    "get /api/v4/usage_data/metric_definitions": "Get a list of all metric definitions",
    "post /api/v4/usage_data/track_event": "Track gitlab internal events",
    "post /api/v4/usage_data/increment_unique_users": "Track usage data event for the current user",
    "post /api/v4/usage_data/increment_counter": "Track usage data event",
    "post /api/v4/user/runners": "Create a runner owned by currently authenticated user",
    "get /api/v4/user/status": "get the status of the current user",
    "patch /api/v4/user/status": "Set the status of the current user",
    "put /api/v4/user/status": "Set the status of the current user",
    "get /api/v4/user/activities": "Get a list of user activities",
    "delete /api/v4/user/emails/{email_id}": "Delete an email address from the currently authenticated user",
    "get /api/v4/user/emails/{email_id}": "Get a single email address owned by the currently authenticated user",
    "post /api/v4/user/emails": "Add new email address to the currently authenticated user",
    "get /api/v4/user/emails": "Get the currently authenticated user's email addresses",
    "get /api/v4/user/preferences": "Get the current user's preferences",
    "put /api/v4/user/preferences": "Update the current user's preferences",
    "put /api/v4/user/{user_id}/credit_card_validation": "Update a user's credit_card_validation",
    "delete /api/v4/user/gpg_keys/{key_id}": "Delete a GPG key from the currently authenticated user",
    "get /api/v4/user/gpg_keys/{key_id}": "Get a single GPG key owned by currently authenticated user",
    "post /api/v4/user/gpg_keys/{key_id}/revoke": "Revoke a GPG key owned by currently authenticated user",
    "post /api/v4/user/gpg_keys": "Add a new GPG key to the currently authenticated user",
    "get /api/v4/user/gpg_keys": "Get the currently authenticated user's GPG keys",
    "delete /api/v4/user/keys/{key_id}": "Delete an SSH key from the currently authenticated user",
    "get /api/v4/user/keys/{key_id}": "Get a single key owned by currently authenticated user",
    "post /api/v4/user/keys": "Add a new SSH key to the currently authenticated user",
    "get /api/v4/user/keys": "Get the currently authenticated user's SSH keys",
    "get /api/v3/user": "Get the currently authenticated user",
    "post /api/v4/user/personal_access_tokens": "Create a personal access token with limited scopes for the currently authenticated user",
    "get /api/v4/user_counts": "Return the user specific counts",
    "get /api/v4/application/statistics": "Get the current application statistics",
    "put /api/v4/application/appearance": "Modify appearance",
    "get /api/v4/application/appearance": "Get the current appearance",
    "put /api/v4/application/plan_limits": "Change plan limits",
    "get /api/v4/application/plan_limits": "Get current plan limits",
    "get /api/v4/deploy_keys": "List all deploy keys",
    "get /api/v4/deploy_tokens": "List all deploy tokens",
    "post /api/v4/import/github/gists": "Import User Gists",
    "post /api/v4/import/github/cancel": "Cancel GitHub project import",
    "post /api/v4/import/github": "Import a GitHub project",
    "post /api/v4/import/bitbucket_server": "Import a BitBucket Server repository",
    "post /api/v4/slack/trigger": "Trigger a global slack command",
    "get /api/v4/metadata": "Retrieve metadata information for this GitLab instance",
    "get /api/v4/version": "Retrieves version information for the GitLab instance",
    "post /api/v4/topics/merge": "Merge topics",
    "delete /api/v4/topics/{id}": "Delete a topic",
    "put /api/v4/topics/{id}": "Update a topic",
    "get /api/v4/topics/{id}": "Get topic",
    "post /api/v4/topics": "Create a topic",
    "get /api/v4/topics": "Get topics"
}
